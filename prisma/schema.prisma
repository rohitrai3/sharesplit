generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  createdAt    DateTime      @default(now())
  memberOf     Group[]       @relation("UserIsMemberOfGroups")
  amdinOf      Group[]       @relation("UserIsAdminOfGroup")
  transactions Transaction[] @relation("TransactionsByUser")
  expenses     Expense[]     @relation("ExpensesByUser")
  oweFrom      Owe[]         @relation("OweFrom")
  oweTo        Owe[]         @relation("OweTo")
}

model Group {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  members   User[]    @relation("UserIsMemberOfGroups")
  admin     User      @relation("UserIsAdminOfGroup", fields: [adminId], references: [id])
  adminId    Int
  expenses  Expense[] @relation("ExpensesInGroup")
  Owe       Owe[]
}

model Expense {
  id           Int           @id @default(autoincrement())
  name         String
  amount       Float
  createdAt    DateTime      @default(now())
  transactions Transaction[] @relation("TransactionsInExpense")
  group        Group         @relation("ExpensesInGroup", fields: [groupId], references: [id])
  groupId      Int
  admin        User          @relation("ExpensesByUser", fields: [userId], references: [id])
  userId       Int
}

model Transaction {
  id        Int      @id @default(autoincrement())
  amount    Float
  isPayor Boolean
  createdAt DateTime @default(now())
  user     User     @relation("TransactionsByUser", fields: [userId], references: [id])
  userId    Int
  expense   Expense  @relation("TransactionsInExpense", fields: [expenseId], references: [id])
  expenseId Int
}

model Owe {
  id           Int      @id @default(autoincrement())
  amount       Float
  from         User     @relation("OweTo", fields: [fromMemberId], references: [id])
  to           User     @relation("OweFrom", fields: [toMemberId], references: [id])
  group        Group    @relation(fields: [groupId], references: [id])
  createdAt    DateTime @default(now())
  fromMemberId Int
  toMemberId   Int
  groupId      Int
}
